# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestTestTry():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_testCheckValue(self):
    # Test name: test_testCheckValue
    # Step # | name | target | value
    # 1 | open | /dbg-en/ | 
    self.driver.get("https://deutsche-boerse.com/dbg-en/")
    # 2 | setWindowSize | 1898x1221 | 
    self.driver.set_window_size(1898, 1221)
    # 3 | selectFrame | index=2 | 
    self.driver.switch_to.frame(2)
    # 4 | selectFrame | relative=parent | 
    self.driver.switch_to.default_content()
    # 5 | selectFrame | index=1 | 
    self.driver.switch_to.frame(1)
    # 6 | open | https://www.boerse-frankfurt.de/aktie/allianz-se | 
    self.driver.get("https://www.boerse-frankfurt.de/aktie/allianz-se")
    # 7 | selectFrame | relative=parent | 
    self.driver.switch_to.default_content()
    # 8 | storeText | css=.last-price | db_value
    self.vars["db_value"] = self.driver.find_element(By.CSS_SELECTOR, ".last-price").text
    # 9 | open | https://google.com | 
    self.driver.get("https://google.com")
    # 10 | click | //*[@id="L2AGLb"]/div | 
    self.driver.find_element(By.XPATH, "//*[@id=\"L2AGLb\"]/div").click()
    # 11 | click | name=q | 
    self.driver.find_element(By.NAME, "q").click()
    # 12 | type | name=q | akcie Allianz SE
    self.driver.find_element(By.NAME, "q").send_keys("akcie Allianz SE")
    # 13 | sendKeys | name=q | ${KEY_ENTER}
    self.driver.find_element(By.NAME, "q").send_keys(Keys.ENTER)
    # 14 | storeText | css=.NprOob | google_value
    self.vars["google_value"] = self.driver.find_element(By.CSS_SELECTOR, ".NprOob").text
    # 15 | if | ${db_value}<${google_value} | 
    if self.driver.execute_script("return (arguments[0]<arguments[1])", self.vars["db_value"],self.vars["google_value"]):
      # 16 | echo | Google have bad price | 
      print("Google have bad price")
    # 18 | close |  | 
    self.driver.close()
  